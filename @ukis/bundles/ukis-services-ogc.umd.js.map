{"version":3,"file":"ukis-services-ogc.umd.js","sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ukis/services-ogc/lib/wmts/wmtsclient.service.ts","ng://@ukis/services-ogc/lib/owc/owc-json.service.ts","ng://@ukis/services-ogc/lib/wps/wps100/wps_marshaller_1.0.0.ts","ng://@ukis/services-ogc/lib/wps/wps200/helpers.ts","ng://@ukis/services-ogc/lib/wps/wps200/wps_marshaller_2.0.0.ts","ng://@ukis/services-ogc/lib/wps/utils/polling.ts","ng://@ukis/services-ogc/lib/wps/cache.ts","ng://@ukis/services-ogc/lib/wps/wpsclient.ts","ng://@ukis/services-ogc/lib/services-ogc.module.ts","ng://@ukis/services-ogc/lib/owc/types/owc-json.ts","ng://@ukis/services-ogc/lib/owc/types/eoc-owc-json.ts","ng://@ukis/services-ogc/lib/wps/wps_datatypes.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Jsonix } from '@boundlessgeo/jsonix';\r\nimport { map } from 'rxjs/operators';\r\nimport * as XLink_1_0_Factory from 'w3c-schemas/lib/XLink_1_0';\r\nconst XLink_1_0 = XLink_1_0_Factory.XLink_1_0;\r\nimport * as OWS_1_1_0_Factory from 'ogc-schemas/lib/OWS_1_1_0';\r\nconst OWS_1_1_0 = OWS_1_1_0_Factory.OWS_1_1_0;\r\nimport * as SMIL_2_0_Factory from 'ogc-schemas/lib/SMIL_2_0';\r\nconst SMIL_2_0 = SMIL_2_0_Factory.SMIL_2_0;\r\nimport * as SMIL_2_0_Language_Factory from 'ogc-schemas/lib/SMIL_2_0_Language';\r\nconst SMIL_2_0_Language = SMIL_2_0_Language_Factory.SMIL_2_0_Language;\r\nimport * as GML_3_1_1_Factory from 'ogc-schemas/lib/GML_3_1_1';\r\nconst GML_3_1_1 = GML_3_1_1_Factory.GML_3_1_1;\r\nimport * as WMTS_1_0_Factory from 'ogc-schemas/lib/WMTS_1_0';\r\nconst WMTS_1_0 = WMTS_1_0_Factory.WMTS_1_0;\r\n\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WmtsClientService {\r\n\r\n    private xmlmarshaller;\r\n    private xmlunmarshaller;\r\n\r\n    constructor(private http: HttpClient) {\r\n        const context = new Jsonix.Context([SMIL_2_0, SMIL_2_0_Language, GML_3_1_1, XLink_1_0, OWS_1_1_0, WMTS_1_0]);\r\n        this.xmlunmarshaller = context.createUnmarshaller();\r\n        this.xmlmarshaller = context.createMarshaller();\r\n    }\r\n\r\n    public getCapabilities (url: string, version = '1.1.0'): Observable<object> {\r\n        // example: https://tiles.geoservice.dlr.de/service/wmts?SERVICE=WMTS&REQUEST=GetCapabilities&VERSION=1.1.0\r\n        const getCapabilitiesUrl = `${url}?SERVICE=WMTS&REQUEST=GetCapabilities&VERSION=${version}`;\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'text/xml',\r\n            'Accept': 'text/xml, application/xml'\r\n        });\r\n        return this.http.get(getCapabilitiesUrl, { headers, responseType: 'text' }).pipe(\r\n            map(response => {\r\n                return this.xmlunmarshaller.unmarshalString(response);\r\n            })\r\n        );\r\n    }\r\n\r\n}","\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  IOwsContext, IOwsResource, IOwsOffering, IOwsOperation, IOwsContent, WMS_Offering, WFS_Offering, WCS_Offering,\r\n  CSW_Offering, WMTS_Offering, GML_Offering, KML_Offering, GeoTIFF_Offering, GMLJP2_Offering, GMLCOV_Offering\r\n} from './types/owc-json';\r\nimport {\r\n  IEocOwsContext, IEocOwsResource, IEocOwsOffering, GeoJson_Offering, Xyz_Offering, IEocOwsWmtsOffering,\r\n  IEocWmsOffering, IEocOwsResourceDimension, IEocOwsWmtsMatrixSet\r\n} from './types/eoc-owc-json';\r\nimport {\r\n  ILayerGroupOptions, ILayerOptions, IRasterLayerOptions, VectorLayer, RasterLayer, IVectorLayerOptions,\r\n  Layer, TLayertype, WmsLayertype, WmtsLayertype, WfsLayertype, GeojsonLayertype, CustomLayer, CustomLayertype, XyzLayertype,\r\n  TRasterLayertype, isRasterLayertype, isVectorLayertype, TVectorLayertype, ILayerDimensions,\r\n  ILayerIntervalAndPeriod,\r\n  IWmtsParams,\r\n  WmtsLayer,\r\n  IWmtsOptions,\r\n  WmsLayer,\r\n  IWmsParams,\r\n  IWmsOptions,\r\n  IListMatrixSet\r\n} from '@ukis/services-layers';\r\nimport { TGeoExtent } from '@ukis/services-map-state';\r\nimport { WmtsClientService } from '../wmts/wmtsclient.service';\r\nimport { of, Observable, forkJoin } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n\r\n\r\nexport function isWmsOffering(str: string): str is WMS_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/wms'\r\n    || str === 'http://schemas.opengis.net/wms/1.1.1'\r\n    || str === 'http://schemas.opengis.net/wms/1.1.0';\r\n}\r\nexport function isWfsOffering(str: string): str is WFS_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/wfs';\r\n}\r\nexport function isWpsOffering(str: string): str is WCS_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/wcs';\r\n}\r\nexport function isCswOffering(str: string): str is CSW_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/csw';\r\n}\r\nexport function isWmtsOffering(str: string): str is WMTS_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/wmts'\r\n    || str === 'http://schemas.opengis.net/wmts/1.0.0'\r\n    || str === 'http://schemas.opengis.net/wmts/1.1.0';\r\n}\r\nexport function isGmlOffering(str: string): str is GML_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/gml';\r\n}\r\nexport function isKmlOffering(str: string): str is KML_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/kml';\r\n}\r\nexport function isGeoTIFFOffering(str: string): str is GeoTIFF_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/geotiff';\r\n}\r\nexport function isGMLJP2Offering(str: string): str is GMLJP2_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/gmljp2';\r\n}\r\nexport function isGMLCOVOffering(str: string): str is GMLCOV_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/gmlcov';\r\n}\r\nexport function isXyzOffering(str: string): str is Xyz_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/xyz';\r\n}\r\nexport function isGeoJsonOffering(str: string): str is GeoJson_Offering {\r\n  return str === 'http://www.opengis.net/spec/owc-geojson/1.0/req/geojson';\r\n}\r\nexport function shardsExpand(v: string) {\r\n  if (!v) { return; }\r\n  let o = []\r\n  for (let i in v.split(',')) {\r\n    var j = v.split(',')[i].split(\"-\")\r\n    if (j.length == 1) {\r\n      o.push(v.split(',')[i])\r\n    } else if (j.length == 2) {\r\n      let start = j[0].charCodeAt(0)\r\n      let end = j[1].charCodeAt(0)\r\n      if (start <= end) {\r\n        for (let k = start; k <= end; k++) {\r\n          o.push(String.fromCharCode(k).toLowerCase());\r\n        }\r\n      } else {\r\n        for (let k = start; k >= end; k--) {\r\n          o.push(String.fromCharCode(k).toLowerCase());\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return o\r\n}\r\n/**\r\n * OWS Context Service\r\n * OGC OWS Context Geo Encoding Standard Version: 1.0\r\n * http://docs.opengeospatial.org/is/14-055r2/14-055r2.html\r\n * http://www.owscontext.org/owc_user_guide/C0_userGuide.html\r\n *\r\n * This service allows you to read and write OWC-data.\r\n * We have added some custom fields to the OWC standard.\r\n *   - accepts the OWC-standard-datatypes as function inputs (so as to be as general as possible)\r\n *   - returns our extended OWC-datatypes as function outputs (so as to be as information-rich as possible)\r\n *\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OwcJsonService {\r\n\r\n  constructor(private wmtsClient: WmtsClientService) {\r\n    //http://www.owscontext.org/owc_user_guide/C0_userGuide.html#truegeojson-encoding-2\r\n  }\r\n\r\n\r\n  checkContext(context: IOwsContext) {\r\n    let isContext_1_0;\r\n    if (!Array.isArray(context.properties.links)) {\r\n      isContext_1_0 = context.properties.links.profiles.find(item => item === 'http://www.opengis.net/spec/owc-geojson/1.0/req/core');\r\n    } else {\r\n      isContext_1_0 = context.properties.links.find(item => item.href === 'http://www.opengis.net/spec/owc-geojson/1.0/req/core');\r\n    }\r\n\r\n    if (!isContext_1_0) {\r\n      console.error('this is not a valid OWS Context v1.0!');\r\n\r\n    }\r\n    return isContext_1_0;\r\n  }\r\n\r\n  getContextTitle(context: IOwsContext) {\r\n    return context.properties.title;\r\n  }\r\n\r\n  getContextPublisher(context: IOwsContext) {\r\n    return (context.properties.publisher) ? context.properties.publisher : null;\r\n  }\r\n\r\n  getContextExtent(context: IOwsContext) {\r\n    return (context.bbox) ? context.bbox : null; // or [-180, -90, 180, 90];\r\n  }\r\n\r\n\r\n  getResources(context: IOwsContext) {\r\n    return context.features;\r\n  }\r\n\r\n  /** Resource --------------------------------------------------- */\r\n  getResourceTitle(resource: IOwsResource) {\r\n    return resource.properties.title;\r\n  }\r\n\r\n  getResourceUpdated(resource: IOwsResource) {\r\n    return resource.properties.updated;\r\n  }\r\n\r\n  getResourceDate(resource: IOwsResource) {\r\n    return (resource.properties.date) ? resource.properties.date : null;\r\n  }\r\n\r\n  getResourceOfferings(resource: IOwsResource) {\r\n    return (resource.properties.offerings) ? resource.properties.offerings : null;\r\n  }\r\n\r\n  /**\r\n   * retrieve layer status active / inactive based on IOwsResource\r\n   * @param resource: IOwsResource\r\n   */\r\n  isActive(resource: IOwsResource) {\r\n    let active = true;\r\n    if (resource.properties.hasOwnProperty('active')) {\r\n      active = resource.properties.active;\r\n    }\r\n    return active;\r\n  }\r\n\r\n  getResourceOpacity(resource: IOwsResource): number {\r\n    let opacity = 1;\r\n    if (resource.properties.hasOwnProperty('opacity')) {\r\n      opacity = resource.properties.opacity;\r\n    }\r\n    return opacity;\r\n  }\r\n\r\n  getResourceAttribution(resource: IOwsResource): string {\r\n    let attribution = '';\r\n    if (resource.properties.hasOwnProperty('attribution')) {\r\n      attribution = resource.properties.attribution;\r\n    }\r\n    return attribution;\r\n  }\r\n\r\n  getResourceShards(resource: IOwsResource): string {\r\n    if (resource.properties.hasOwnProperty('shards')) {\r\n      return resource.properties.shards;\r\n    }\r\n  }\r\n\r\n  convertOwcTimeToIsoTimeAndPeriodicity(owctime: string): ILayerIntervalAndPeriod | string {\r\n    /**\r\n     Convert from\r\n    */\r\n    let arr = owctime.split('/');\r\n    let t = (arr.length == 3) ? arr[0] + '/' + arr[1] : owctime;\r\n    let p = (arr.length == 3) ? arr[2] : null;\r\n    if (p) {\r\n      return { \"interval\": t, \"periodicity\": p };\r\n    }\r\n    else {\r\n      return t\r\n    }\r\n  }\r\n\r\n  getResourceDimensions(resource: IOwsResource): ILayerDimensions {\r\n    if (!resource.properties.hasOwnProperty('dimensions')) {\r\n      return undefined;\r\n    }\r\n    let dims = {}\r\n\r\n    let dimensions = {}\r\n    if (Array.isArray(resource.properties.dimensions)) {\r\n      for (let d of resource.properties.dimensions) {\r\n        dimensions[d.name] = d\r\n      }\r\n    } else {\r\n      dimensions = resource.properties.dimensions\r\n    }\r\n    for (let name in dimensions) {\r\n      let dim = {}\r\n      console.log(name)\r\n      if (name === \"time\" || dimensions[name].units == \"ISO8601\") {\r\n        let value = dimensions[name].value\r\n        let values = (value) ? value.split(',').map((v: string) => this.convertOwcTimeToIsoTimeAndPeriodicity(v)) : null\r\n        dim = {\r\n          \"values\": ((!values) || values.length > 1) ? values : values[0],\r\n          \"units\": dimensions[name].units,\r\n          \"display\": {\r\n            \"format\": \"YYYMMDD\",\r\n            \"period\": dimensions[name].display,\r\n            \"default\": \"end\"\r\n          }\r\n        }\r\n      }\r\n      else if (name === \"elevation\") {\r\n        dim = dimensions[name];\r\n      }\r\n      else {\r\n        dim = dimensions[name];\r\n      }\r\n      dims[name] = dim;\r\n    }\r\n    return dims;\r\n  }\r\n\r\n  /** Offering --------------------------------------------------- */\r\n  getLayertypeFromOfferingCode(offering: IOwsOffering): TLayertype {\r\n    if (isWmsOffering(offering.code)) {\r\n      return WmsLayertype;\r\n    } else if (isWmtsOffering(offering.code)) {\r\n      return WmtsLayertype;\r\n    } else if (isWfsOffering(offering.code)) {\r\n      return WfsLayertype;\r\n    } else if (isGeoJsonOffering(offering.code)) {\r\n      return GeojsonLayertype;\r\n    } else if (isXyzOffering(offering.code)) {\r\n      return XyzLayertype;\r\n    } else {\r\n      return offering.code; // an offering can also be any other string.\r\n    }\r\n  }\r\n\r\n  checkIfServiceOffering(offering: IOwsOffering): boolean {\r\n    return (!offering.contents && offering.operations) ? true : false;\r\n  }\r\n\r\n  checkIfDataOffering(offering: IOwsOffering): boolean {\r\n    return (offering.contents && !offering.operations) ? true : false;\r\n  }\r\n\r\n  getOfferingContents(offering: IOwsOffering): IOwsOperation[] | IOwsContent[] {\r\n    if (this.checkIfServiceOffering(offering)) {\r\n      return offering.operations;\r\n    } else if (this.checkIfDataOffering(offering)) {\r\n      return offering.contents;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper function to extract legendURL from project specific ows Context\r\n   * @param offering layer offering\r\n   */\r\n  getLegendUrl(offering: IOwsOffering) {\r\n    let legendUrl = '';\r\n\r\n    if (offering.hasOwnProperty('styles')) {\r\n      let defaultStyle = offering.styles.filter(style => style.default);\r\n      if (defaultStyle.length > 0) {\r\n        return defaultStyle[0].legendURL;\r\n      }\r\n    } else if (offering.hasOwnProperty('legendUrl')) {\r\n      legendUrl = offering.legendUrl;\r\n    }\r\n    return legendUrl;\r\n  }\r\n\r\n  /**\r\n   * retrieve iconUrl based on IOwsOffering\r\n   * @param offering\r\n   */\r\n  getIconUrl(offering: IOwsOffering) {\r\n    let iconUrl = '';\r\n    if (offering.hasOwnProperty('iconUrl')) {\r\n      iconUrl = offering.iconUrl;\r\n    }\r\n    return iconUrl;\r\n  }\r\n\r\n  /**\r\n   * layer priority: first wms, then wmts, then wfs, then others.\r\n   */\r\n  public getLayers(owc: IOwsContext, targetProjection: string): Observable<Layer[]> {\r\n    const resources = owc.features;\r\n    const layers$: Observable<Layer>[] = [];\r\n\r\n    for (const resource of resources) {\r\n      const offerings = resource.properties.offerings;\r\n      if (offerings.length > 0) {\r\n        const offering = offerings.find(o => isWmsOffering(o.code))\r\n          || offerings.find(o => isWmtsOffering(o.code))\r\n          || offerings.find(o => isWfsOffering(o.code))\r\n          || offerings[0];\r\n        layers$.push(this.createLayerFromOffering(offering, resource, owc, targetProjection));\r\n      }\r\n    }\r\n\r\n    return forkJoin(layers$);\r\n  }\r\n\r\n  createLayerFromOffering(offering: IOwsOffering, resource: IOwsResource, context: IOwsContext, targetProjection: string): Observable<Layer> {\r\n    const layerType = this.getLayertypeFromOfferingCode(offering);\r\n    if (isRasterLayertype(layerType)) {\r\n      return this.createRasterLayerFromOffering(offering, resource, context, targetProjection);\r\n    } else if (isVectorLayertype(layerType)) {\r\n      return this.createVectorLayerFromOffering(offering, resource, context);\r\n    } else {\r\n      console.error(`This type of service (${layerType}) has not been implemented yet.`);\r\n    }\r\n  }\r\n\r\n  createVectorLayerFromOffering(offering: IOwsOffering, resource: IOwsResource, context?: IOwsContext): Observable<VectorLayer> {\r\n    const layerType = this.getLayertypeFromOfferingCode(offering);\r\n\r\n    if (!isVectorLayertype(layerType)) {\r\n      console.error(`This type of layer '${layerType}' / offering '${offering.code}' cannot be converted into a Vectorlayer`);\r\n      return null;\r\n    }\r\n\r\n    const iconUrl = this.getIconUrl(offering);\r\n\r\n    let layerUrl, params;\r\n    // if we have a operations-offering (vs. a data-offering):\r\n    if (offering.operations) layerUrl = this.getUrlFromUri(offering.operations[0].href);\r\n    if (offering.operations) params = this.getJsonFromUri(offering.operations[0].href);\r\n\r\n    let data;\r\n    // if we have a data-offering: \r\n    if (offering.contents) {\r\n      data = offering.contents[0].content;\r\n    }\r\n\r\n    let legendUrl = this.getLegendUrl(offering);\r\n\r\n    let layerOptions: IVectorLayerOptions = {\r\n      id: resource.id as string,\r\n      name: this.getResourceTitle(resource),\r\n      displayName: this.getDisplayName(offering, resource),\r\n      visible: this.isActive(resource),\r\n      type: layerType,\r\n      removable: true,\r\n      attribution: this.getResourceAttribution(resource),\r\n      continuousWorld: false,\r\n      opacity: this.getResourceOpacity(resource),\r\n      url: layerUrl ? layerUrl : null,\r\n      legendImg: legendUrl ? legendUrl : null,\r\n      data: data\r\n    };\r\n\r\n\r\n    const layer = new VectorLayer(layerOptions);\r\n\r\n    if (resource.bbox) {\r\n      layer.bbox = resource.bbox;\r\n    } else if (context && context.bbox) {\r\n      layer.bbox = context.bbox;\r\n    }\r\n\r\n    return of(layer);\r\n  }\r\n\r\n  createRasterLayerFromOffering(\r\n    offering: IOwsOffering, resource: IOwsResource, context: IOwsContext, targetProjection: string): Observable<RasterLayer> {\r\n    const layerType = this.getLayertypeFromOfferingCode(offering);\r\n\r\n    if (!isRasterLayertype(layerType)) {\r\n      console.error(`This type of offering '${offering.code}' cannot be converted into a rasterlayer.`);\r\n      return null;\r\n    }\r\n\r\n    let rasterLayer$: Observable<RasterLayer>;\r\n    switch (layerType) {\r\n      case WmsLayertype:\r\n        rasterLayer$ = this.createWmsLayerFromOffering(offering, resource, context);\r\n        break;\r\n      case WmtsLayertype:\r\n        rasterLayer$ = this.createWmtsLayerFromOffering(offering, resource, context, targetProjection);\r\n        break;\r\n      case XyzLayertype:\r\n        // @TODO\r\n        break;\r\n      case CustomLayertype:\r\n        // custom layers are meant to be userdefined and not easily encoded in a OWC.\r\n        break;\r\n    }\r\n\r\n    return rasterLayer$;\r\n  }\r\n\r\n  private createWmtsLayerFromOffering(\r\n    offering: IOwsOffering, resource: IOwsResource, context: IOwsContext, targetProjection: string): Observable<WmtsLayer> {\r\n    return this.getWmtsOptions(offering, resource, context, targetProjection).pipe(map((options: IWmtsOptions) => {\r\n      const layer = new WmtsLayer(options);\r\n      return layer;\r\n    }));\r\n  }\r\n\r\n  private createWmsLayerFromOffering(offering: IOwsOffering, resource: IOwsResource, context: IOwsContext): Observable<WmsLayer> {\r\n    const options: IWmsOptions = this.getWmsOptions(offering, resource, context);\r\n    const layer = new WmsLayer(options);\r\n    return of(layer);\r\n  }\r\n\r\n  private getWmtsOptions(\r\n    offering: IOwsOffering, resource: IOwsResource, context: IOwsContext, targetProjection: string): Observable<IWmtsOptions> {\r\n    const rasterOptions: IRasterLayerOptions = this.getRasterLayerOptions(offering, resource, context);\r\n\r\n    const layer = this.getLayerForWMTS(offering, resource);\r\n\r\n    let style: string;\r\n    if (offering.styles) {\r\n      const styleInfo = offering.styles.find(s => s.default);\r\n      if (styleInfo) {\r\n        style = styleInfo.name;\r\n      }\r\n    }\r\n\r\n    return this.getMatrixSetForWMTS(offering, resource, targetProjection).pipe(map(((matrixSet: IEocOwsWmtsMatrixSet) => {\r\n      const matrixSetOptions: IListMatrixSet = {\r\n        matrixSet: matrixSet.matrixSet,\r\n        matrixIds: matrixSet.matrixIds,\r\n        resolutions: matrixSet.resolutions\r\n      };\r\n      const wmtsOptions: IWmtsOptions = {\r\n        ...rasterOptions,\r\n        type: 'wmts',\r\n        params: {\r\n          layer: layer,\r\n          matrixSetOptions: matrixSetOptions,\r\n          projection: targetProjection,\r\n          style: style,\r\n          format: 'image/png'\r\n        }\r\n      };\r\n      return wmtsOptions;\r\n    })));\r\n  }\r\n\r\n  private getLayerForWMTS(offering: IOwsOffering, resource: IOwsResource): string {\r\n    const [url, urlParams] = this.parseOperationUrl(offering, 'GetTile');\r\n    if (urlParams['LAYER']) {\r\n      return urlParams['LAYER'];\r\n    } else {\r\n      console.error(`There is no layer-parameter in the offering ${offering.code} for resource ${resource.id}.\r\n      Cannot infer layer.`, offering);\r\n    }\r\n  }\r\n\r\n  private parseOperationUrl(offering: IOwsOffering, opCode: string): [string, object] {\r\n    if (offering.operations) {\r\n      const operation = offering.operations.find(op => op.code === opCode);\r\n      if (operation) {\r\n        const url = this.getUrlFromUri(operation.href);\r\n        const urlParams = this.getJsonFromUri(operation.href);\r\n        return [url, urlParams];\r\n      } else {\r\n        console.error(`There is no ${opCode}-operation in the offering ${offering.code}.`, offering);\r\n      }\r\n    } else {\r\n      console.error(`The offering ${offering.code} has no operations.`, offering);\r\n    }\r\n  }\r\n\r\n  private getMatrixSetForWMTS(offering: IOwsOffering, resource: IOwsResource, targetProjection: string): Observable<IEocOwsWmtsMatrixSet> {\r\n    if (offering.matrixSets) {\r\n      const matrixSet = offering.matrixSets.find(m => m.srs === targetProjection);\r\n      return of(matrixSet);\r\n    } else {\r\n      const [url, urlParams] = this.parseOperationUrl(offering, 'GetCapabilities');\r\n      return this.wmtsClient.getCapabilities(url).pipe(\r\n        map((capabilities: object) => {\r\n          const matrixSets = capabilities['value']['contents']['tileMatrixSet'];\r\n          const matrixSet = matrixSets.find(ms => ms['identifier']['value'] === targetProjection);\r\n          const owsMatrixSet: IEocOwsWmtsMatrixSet = {\r\n            srs: targetProjection,\r\n            matrixSet: matrixSet['identifier']['value'],\r\n            matrixIds: matrixSet['tileMatrix'].map(tm => tm['identifier']['value']),\r\n            resolutions: matrixSet['tileMatrix'].map(tm => tm['scaleDenominator']),\r\n            origin: {\r\n              x: matrixSet['tileMatrix'][0]['topLeftCorner'][1],\r\n              y: matrixSet['tileMatrix'][0]['topLeftCorner'][0]\r\n            },\r\n            tilesize: matrixSet['tileMatrix'][0]['tileHeight']\r\n          };\r\n          return owsMatrixSet;\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private getWmsOptions(offering: IOwsOffering, resource: IOwsResource, context: IOwsContext): IWmsOptions {\r\n    const rasterOptions: IRasterLayerOptions = this.getRasterLayerOptions(offering, resource, context);\r\n    if (rasterOptions.type === WmsLayertype) {\r\n\r\n      const urlParams = this.getJsonFromUri(offering.operations[0].href);\r\n      let defaultStyle;\r\n      if (offering.styles) {\r\n        defaultStyle = offering.styles.find(s => s.default).name;\r\n      }\r\n\r\n      const params: IWmsParams = {\r\n        LAYERS: urlParams['LAYERS'],\r\n        FORMAT: urlParams['FORMAT'],\r\n        TIME: urlParams['TIME'],\r\n        VERSION: urlParams['VERSION'],\r\n        TILED: urlParams['TILED'],\r\n        TRANSPARENT: true,\r\n        STYLES: defaultStyle\r\n      };\r\n\r\n      const wmsOptions: IWmsOptions = {\r\n        ...rasterOptions,\r\n        type: 'wms',\r\n        params: params\r\n      };\r\n      return wmsOptions;\r\n    } else {\r\n      console.error(`resource ${resource.id} cannot be converted into a WMS-Layer`, offering);\r\n    }\r\n  }\r\n\r\n  private getRasterLayerOptions(offering: IOwsOffering, resource: IOwsResource, context: IOwsContext): IRasterLayerOptions {\r\n    const layerOptions: ILayerOptions = this.getLayerOptions(offering, resource, context);\r\n    if (isRasterLayertype(layerOptions.type)) {\r\n      const rasterLayerOptions: IRasterLayerOptions = {\r\n        ...layerOptions,\r\n        type: layerOptions.type as TRasterLayertype,\r\n        url: this.getUrlFromUri(offering.operations[0].href),\r\n        subdomains: shardsExpand(this.getResourceShards(resource))\r\n      };\r\n      return rasterLayerOptions;\r\n    } else {\r\n      console.error(`The layer ${layerOptions.id} is not a rasterlayer`, layerOptions);\r\n    }\r\n  }\r\n\r\n  private getLayerOptions(offering: IOwsOffering, resource: IOwsResource, context: IOwsContext): ILayerOptions {\r\n    const layerOptions: ILayerOptions = {\r\n      id: resource.id as string,\r\n      type: this.getLayertypeFromOfferingCode(offering),\r\n      name: this.getResourceTitle(resource),\r\n      removable: true,\r\n      continuousWorld: false,\r\n      opacity: this.getResourceOpacity(resource),\r\n      displayName: this.getDisplayName(offering, resource),\r\n      visible: this.isActive(resource),\r\n      attribution: this.getResourceAttribution(resource),\r\n      dimensions: this.getResourceDimensions(resource),\r\n      legendImg: this.getLegendUrl(offering),\r\n      styles: offering.styles\r\n    };\r\n\r\n    if (resource.bbox) {\r\n      layerOptions.bbox = resource.bbox;\r\n    } else if (context && context.bbox) {\r\n      layerOptions.bbox = context.bbox;\r\n    }\r\n\r\n    return layerOptions;\r\n  }\r\n\r\n  /** Misc --------------------------------------------------- */\r\n\r\n  private getUrlFromUri(uri: string) {\r\n    return uri.substring(0, uri.indexOf('?'));\r\n  }\r\n\r\n  /**\r\n   * helper to pack query-parameters of a uri into a JSON\r\n   * @param uri any uri with query-parameters\r\n   */\r\n  private getJsonFromUri(uri: string): object {\r\n    const query = uri.substr(uri.lastIndexOf('?') + 1);\r\n    const result = {};\r\n    query.split('&').forEach(function (part) {\r\n      const item = part.split('=');\r\n      result[item[0].toUpperCase()] = decodeURIComponent(item[1]);\r\n    });\r\n    return result;\r\n  }\r\n\r\n\r\n  /**\r\n   * retrieve display name of layer, based on IOwsResource and IOwsOffering\r\n   * @param offering\r\n   * @param resource\r\n   */\r\n  private getDisplayName(offering: IOwsOffering, resource: IOwsResource) {\r\n    let displayName = '';\r\n    if (offering.hasOwnProperty('title')) {\r\n      if (offering.title) {\r\n        displayName = offering.title;\r\n      } else {\r\n        displayName = this.getResourceTitle(resource);\r\n      }\r\n    }\r\n    return displayName;\r\n  }\r\n\r\n\r\n  /**------------ DATA TO FILE -----------------------------------------*/\r\n\r\n\r\n  /**\r\n   * @TODO:\r\n   *   - properties\r\n   */\r\n  generateOwsContextFrom(id: string, layers: Layer[], extent?: TGeoExtent, properties?): IEocOwsContext {\r\n\r\n    if (!properties) {\r\n      properties = {\r\n        lang: '',\r\n        links: [],\r\n        title: '',\r\n        updated: ''\r\n      };\r\n    }\r\n\r\n    let owc: IEocOwsContext = {\r\n      'id': id,\r\n      'type': 'FeatureCollection',\r\n      'properties': properties,\r\n      'features': []\r\n    };\r\n\r\n    if (extent) {\r\n      owc['bbox'] = extent;\r\n    }\r\n\r\n    for (let layer of layers) {\r\n      let resource: IEocOwsResource = this.generateResourceFromLayer(layer);\r\n      // TODO check for layer types\r\n      owc.features.push(resource);\r\n    }\r\n\r\n    return owc;\r\n  }\r\n\r\n  generateResourceFromLayer(layer: Layer): IEocOwsResource {\r\n    let resource: IEocOwsResource = {\r\n      'id': layer.id,\r\n      'properties': {\r\n        title: layer.name,\r\n        updated: null,\r\n        offerings: [this.generateOfferingFromLayer(layer)],\r\n        opacity: layer.opacity,\r\n        attribution: layer.attribution,\r\n      },\r\n      'type': 'Feature',\r\n      'geometry': null\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  generateOfferingFromLayer(layer: Layer, legendUrl?: string, iconUrl?: string): IEocOwsOffering {\r\n    let offering: IEocOwsOffering = {\r\n      'code': this.getOfferingCodeFromLayer(layer),\r\n      'title': layer.name\r\n    };\r\n\r\n    if (layer.type == GeojsonLayertype) {\r\n      offering.contents = this.getContentsFromLayer(layer as VectorLayer);\r\n    } else {\r\n      offering.operations = this.getOperationsFromLayer(layer);\r\n    }\r\n\r\n    if (legendUrl) offering.legendUrl = legendUrl;\r\n    if (iconUrl) offering.iconUrl = iconUrl;\r\n\r\n    return offering;\r\n  }\r\n\r\n  getOfferingCodeFromLayer(layer: Layer): string {\r\n    switch (layer.type) {\r\n      case WmsLayertype:\r\n        return 'http://www.opengis.net/spec/owc-geojson/1.0/req/wms';\r\n      case WmtsLayertype:\r\n        return 'http://www.opengis.net/spec/owc-geojson/1.0/req/wmts';\r\n      case GeojsonLayertype:\r\n        return 'http://www.opengis.net/spec/owc-geojson/1.0/req/geojson';\r\n      case XyzLayertype:\r\n        return 'http://www.opengis.net/spec/owc-geojson/1.0/req/xyz';\r\n      default:\r\n        console.error(`This type of layer (${layer.type}) has not been implemented yet.`);\r\n        return null;\r\n    }\r\n  }\r\n\r\n  getContentsFromLayer(layer: VectorLayer): IOwsContent[] {\r\n    let contents = [];\r\n    switch (layer.type) {\r\n      case GeojsonLayertype:\r\n        let content = {\r\n          type: 'FeatureCollection',\r\n          content: JSON.stringify(layer.data)\r\n        };\r\n        contents.push(content);\r\n        break;\r\n      default:\r\n        console.error(`Cannot get contents for this type of vectorlayer: (${layer.type})`);\r\n    }\r\n    return contents;\r\n  }\r\n\r\n  getOperationsFromLayer(layer: Layer): IOwsOperation[] {\r\n    if (layer instanceof RasterLayer) {\r\n      switch (layer.type) {\r\n        case WmsLayertype:\r\n          return this.getWmsOperationsFromLayer(layer);\r\n        case WmtsLayertype:\r\n          return this.getWmtsOperationsFromLayer(layer);\r\n        case XyzLayertype:\r\n          return this.getXyzOperationsFromLayer(layer);\r\n        default:\r\n          console.error(`Cannot get operations for this type of layer: (${layer.type})`);\r\n          return [];\r\n      }\r\n    }\r\n\r\n    else if (layer instanceof VectorLayer) {\r\n      switch (layer.type) {\r\n        // case 'wfs': <--- this type of layer has not been implemented yet in datatypes-layers/Layers.ts \r\n        //   return this.getWfsOperationsFromLayer(layer);\r\n        default:\r\n          console.error(`This type of service (${layer.type}) has not been implemented yet.`);\r\n          return [];\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  getXyzOperationsFromLayer(layer: RasterLayer): IOwsOperation[] {\r\n    let restCall: IOwsOperation = {\r\n      'code': 'REST',\r\n      'method': 'GET',\r\n      'type': 'text/html',\r\n      'href': `${layer.url}`\r\n    }\r\n\r\n    let operations: IOwsOperation[] = [\r\n      restCall\r\n    ];\r\n\r\n    return operations;\r\n  }\r\n\r\n  getTmsOperationsFromLayer(layer: RasterLayer): IOwsOperation[] {\r\n    // @TODO: what operations are defined on TMS? https://wiki.osgeo.org/wiki/Tile_Map_Service_Specification\r\n    return [];\r\n  }\r\n\r\n\r\n  getWfsOperationsFromLayer(layer: VectorLayer): IOwsOperation[] {\r\n\r\n    let url = layer.url;\r\n    let layerName = layer.name;\r\n    let version = layer.options.version ? layer.options.version : '1.1.0';\r\n\r\n\r\n    let GetFeature: IOwsOperation = {\r\n      'code': 'GetFeature',\r\n      'method': 'GET',\r\n      'type': 'application/json',\r\n      'href': `${url}?service=WFS&version=${version}&request=GetFeature`\r\n    };\r\n\r\n    // let DescribeFeatureType: IOwsOperation = null;\r\n    // let GetCapabilities: IOwsOperation = null;\r\n    // let GetPropertyValue: IOwsOperation = null;\r\n    // let GetFeatureWithLock: IOwsOperation = null;\r\n    // let LockFeature: IOwsOperation = null;\r\n    // let Transaction: IOwsOperation = null;\r\n    // let CreateStoredQuery: IOwsOperation = null;\r\n    // let DropStoredQuery: IOwsOperation = null;\r\n    // let ListStoredQueries: IOwsOperation = null;\r\n    // let DescribeStoredQueries: IOwsOperation = null;\r\n\r\n    let operations = [\r\n      GetFeature,\r\n      // GetCapabilities,\r\n      // DescribeFeatureType,\r\n      // GetPropertyValue,\r\n      // GetFeatureWithLock,\r\n      // LockFeature,\r\n      // Transaction,\r\n      // CreateStoredQuery,\r\n      // DropStoredQuery,\r\n      // ListStoredQueries,\r\n      // DescribeStoredQueries\r\n    ];\r\n\r\n    return operations;\r\n  }\r\n\r\n\r\n  getWmsOperationsFromLayer(layer: RasterLayer): IOwsOperation[] {\r\n\r\n    let url = layer.url;\r\n    let wmsVersion = layer.params.VERSION;\r\n    let layerName = layer.name;\r\n    let layerId = layer.id;\r\n    let format = 'image/vnd.jpeg-png';\r\n    if (layer.params && layer.params.FORMAT) format = layer.params.FORMAT;\r\n\r\n    let getMap: IOwsOperation = {\r\n      'code': 'GetMap',\r\n      'method': 'GET',\r\n      'type': format,\r\n      'href': `${url}?service=WMS&version=${wmsVersion}&request=GetMap&TRANSPARENT=TRUE&LAYERS=${layerId}&FORMAT=${format}&TILED=true`\r\n    };\r\n\r\n    let getCapabilities: IOwsOperation = {\r\n      'code': 'GetCapabilities',\r\n      'method': 'GET',\r\n      'type': 'application/xml',\r\n      'href': `${url}?service=WMS&version=${wmsVersion}&request=GetCapabilities`\r\n    }\r\n\r\n    let getFeatureInfo: IOwsOperation = {\r\n      'code': 'GetFeatureInfo',\r\n      'method': 'GET',\r\n      'type': 'text/html',\r\n      'href': `${url}?service=WMS&version=${wmsVersion}&request=GetFeatureInfo&TRANSPARENT=TRUE&LAYERS=${layerId}&FORMAT=${format}`\r\n    }\r\n\r\n    let operations: IOwsOperation[] = [\r\n      getMap,\r\n      getCapabilities,\r\n      getFeatureInfo\r\n    ];\r\n\r\n    return operations;\r\n  }\r\n\r\n  getWmtsOperationsFromLayer(layer: RasterLayer): IOwsOperation[] {\r\n\r\n    let url = layer.url;\r\n    let wmtsVersion = layer.params.version;\r\n    let layerName = layer.name;\r\n    let layerId = layer.id;\r\n    let format = 'image/vnd.jpeg-png';\r\n    if (layer.params && layer.params.FORMAT) format = layer.params.FORMAT;\r\n\r\n    let getTile: IOwsOperation = {\r\n      'code': 'GetTile',\r\n      'href': `${url}?SERVICE=WMTS&REQUEST=GetTile&FORMAT=${format}&LAYER=${layerId}&VERSION=${wmtsVersion}`,\r\n      'method': 'GET',\r\n      'type': format\r\n    };\r\n\r\n    let getCapabilities: IOwsOperation = {\r\n      'code': 'GetCapabilities',\r\n      'href': `${url}?SERVICE=WMTS&REQUEST=GetCapabilities&VERSION=${wmtsVersion}`,\r\n      'method': 'GET',\r\n      'type': 'application/xml'\r\n    }\r\n\r\n    // Note: we deliberately use the WMS protocol here instead of WMTS.\r\n    // Reason: WMTS delivers RGB-values, wheras WMS delivers the actual value that was used to create a tile.\r\n    let getFeatureInfo: IOwsOperation = {\r\n      'code': 'GetFeatureInfo',\r\n      'href': `${url}?SERVICE=WMS&REQUEST=GetFeatureInfo&VERSION=${wmtsVersion}`,\r\n      'method': 'GET',\r\n      'type': 'text/html'\r\n    }\r\n\r\n    let operations: IOwsOperation[] = [\r\n      getTile,\r\n      getCapabilities,\r\n      getFeatureInfo\r\n    ];\r\n\r\n    return operations;\r\n  }\r\n}\r\n","import { WpsMarshaller, WpsInput, WpsOutputDescription, WpsResult, WpsCapability, WpsBboxValue, WpsData, WpsDataDescription, WpsState, WpsDataFormat } from '../wps_datatypes';\r\nimport {\r\n    WPSCapabilitiesType, IWpsExecuteProcessBody, Execute, DataInputsType,\r\n    InputType, ResponseFormType, DataType, IWpsExecuteResponse, DocumentOutputDefinitionType,\r\n    ResponseDocumentType, InputReferenceType, LiteralDataType, ExecuteResponse\r\n} from './wps_1.0.0';\r\n\r\n\r\n\r\nexport class WpsMarshaller100 implements WpsMarshaller {\r\n\r\n    constructor() { }\r\n\r\n    getCapabilitiesUrl(baseurl: string): string {\r\n        return `${baseurl}?service=WPS&request=GetCapabilities&version=1.0.0`;\r\n    }\r\n\r\n    executeUrl(baseurl: string, processId: string): string {\r\n        return `${baseurl}?service=WPS&request=Execute&version=1.0.0&identifier=${processId}`;\r\n    }\r\n\r\n    unmarshalCapabilities(capabilities: WPSCapabilitiesType): WpsCapability[] {\r\n        const out: WpsCapability[] = [];\r\n        capabilities.processOfferings.process.forEach(process => {\r\n            out.push({\r\n                id: process.identifier.value\r\n            });\r\n        });\r\n        return out;\r\n    }\r\n\r\n    unmarshalSyncExecuteResponse(responseJson: IWpsExecuteResponse, url: string, processId: string,\r\n        inputs: WpsInput[], outputDescriptions: WpsOutputDescription[]): WpsResult[] {\r\n\r\n        const out: WpsResult[] = [];\r\n\r\n        if (responseJson.value.status.processFailed) { // Failure?\r\n            out.push({\r\n                description: {\r\n                    id: responseJson.value.process.identifier.value,\r\n                    reference: true,\r\n                    type: 'error'\r\n                },\r\n                value: responseJson.value.statusLocation\r\n            });\r\n        } else if (responseJson.value.processOutputs) { // synchronous request?\r\n            for (const output of responseJson.value.processOutputs.output) {\r\n                const isReference = output.reference ? true : false;\r\n\r\n                let datatype: 'literal' | 'complex' | 'bbox' | 'status' | 'error';\r\n                let data;\r\n                let format: WpsDataFormat | undefined;\r\n                if (output.reference) {\r\n                    datatype = 'complex';\r\n                    data = output.reference.href || null;\r\n                    format = output.reference.mimeType as WpsDataFormat;\r\n                } else {\r\n                    if (output.data && output.data.literalData) {\r\n                        datatype = 'literal';\r\n                        format = output.data.literalData.dataType as WpsDataFormat;\r\n                    } else if (output.data && output.data.complexData) {\r\n                        datatype = 'complex';\r\n                        format = output.data.complexData.mimeType as WpsDataFormat;\r\n                    } else {\r\n                        datatype = 'bbox';\r\n                        format = undefined;\r\n                    }\r\n                    // @ts-ignore\r\n                    data = this.unmarshalOutputData(output.data);\r\n                }\r\n\r\n                out.push({\r\n                    description: {\r\n                        id: output.identifier.value,\r\n                        format: format,\r\n                        reference: isReference,\r\n                        type: datatype\r\n                    },\r\n                    value: data,\r\n                });\r\n            }\r\n        } else if (responseJson.value.statusLocation) { // asynchronous request?\r\n            out.push({\r\n                description: {\r\n                    id: responseJson.value.process.identifier.value,\r\n                    reference: true,\r\n                    type: 'status'\r\n                },\r\n                value: this.unmarshalGetStateResponse(responseJson, url, processId, inputs, outputDescriptions)\r\n            });\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    protected unmarshalOutputData(data: DataType): any {\r\n        if (data.complexData) {\r\n            switch (data.complexData.mimeType) {\r\n                case 'application/vnd.geo+json':\r\n                case 'application/json':\r\n                    return data.complexData.content.map(cont => JSON.parse(cont));\r\n                case 'application/WMS':\r\n                    return data.complexData.content;\r\n                case 'text/xml':\r\n                    return new XMLSerializer().serializeToString(data.complexData.content[0]); // @TODO: better: handle actual xml-data\r\n                default:\r\n                    throw new Error(`Cannot unmarshal data of format ${data.complexData.mimeType}`);\r\n            }\r\n        } else if (data.literalData) {\r\n            switch (data.literalData.dataType) {\r\n                case 'string':\r\n                default:\r\n                    return data.literalData.value;\r\n            }\r\n        }\r\n\r\n        throw new Error(`Not yet implemented: ${data}`);\r\n    }\r\n\r\n    unmarshalAsyncExecuteResponse(responseJson: any, url: string, processId: string, inputs: WpsInput[], outputDescriptions: WpsDataDescription[]): WpsState {\r\n        return this.unmarshalGetStateResponse(responseJson, url, processId, inputs, outputDescriptions);\r\n    }\r\n\r\n    unmarshalGetStateResponse(responseJson: any, serverUrl: string, processId: string,\r\n        inputs: WpsData[], outputDescriptions: WpsDataDescription[]): WpsState {\r\n\r\n        const response: ExecuteResponse = responseJson.value;\r\n        \r\n        const status = response.status.processSucceeded ? 'Succeeded' :\r\n        response.status.processAccepted ? 'Accepted' :\r\n        response.status.processStarted ? 'Running' :\r\n        response.status.processFailed ? 'Failed' :\r\n        'Failed';\r\n        \r\n        const state: WpsState = {\r\n            status: status,\r\n            statusLocation: response.statusLocation,\r\n        };\r\n\r\n        if (response.processOutputs && response.processOutputs.output) {\r\n            state.results = this.unmarshalSyncExecuteResponse(responseJson, serverUrl, processId, inputs, outputDescriptions);\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    marshalExecBody(processId: string, inputs: WpsInput[], outputs: WpsOutputDescription[], async: boolean): IWpsExecuteProcessBody {\r\n\r\n        const wps1Inputs = this.marshalInputs(inputs);\r\n        const wps1ResponseForm = this.marshalResponseForm(outputs, async);\r\n\r\n        const bodyValue: Execute = {\r\n            dataInputs: wps1Inputs,\r\n            identifier: processId,\r\n            responseForm: wps1ResponseForm,\r\n            service: 'WPS',\r\n            version: '1.0.0'\r\n        };\r\n\r\n        const body: IWpsExecuteProcessBody = {\r\n            name: {\r\n                key: '{http://www.opengis.net/wps/1.0.0}Execute',\r\n                localPart: 'Execute',\r\n                namespaceURI: 'http://www.opengis.net/wps/1.0.0',\r\n                prefix: 'wps',\r\n                string: '{http://www.opengis.net/wps/1.0.0}wps:Execute'\r\n            },\r\n            value: bodyValue\r\n        };\r\n\r\n        return body;\r\n\r\n    }\r\n\r\n\r\n    protected marshalResponseForm(outputs: WpsOutputDescription[], async = false): ResponseFormType {\r\n\r\n        const outputDefinitions: DocumentOutputDefinitionType[] = [];\r\n        for (const output of outputs) {\r\n            let defType: DocumentOutputDefinitionType;\r\n            switch (output.type) {\r\n                case 'literal':\r\n                    defType = {\r\n                        identifier: { value: output.id },\r\n                        asReference: output.reference,\r\n                        mimeType: output.format\r\n                    };\r\n                    break;\r\n                case 'complex':\r\n                    defType = {\r\n                        identifier: { value: output.id },\r\n                        asReference: output.reference,\r\n                        mimeType: output.format\r\n                    };\r\n                    break;\r\n                default:\r\n                    throw new Error(`This Wps-outputtype has not been implemented yet! ${output} `);\r\n            }\r\n            outputDefinitions.push(defType);\r\n        }\r\n\r\n        const responseDocument: ResponseDocumentType = {\r\n            output: outputDefinitions,\r\n            status: async ? true : false,\r\n            storeExecuteResponse: async ? true : false\r\n        };\r\n\r\n        const form: ResponseFormType = {\r\n            responseDocument\r\n        };\r\n        return form;\r\n    }\r\n\r\n\r\n    protected marshalInputs(inputArr: WpsInput[]): DataInputsType {\r\n        const theInputs: InputType[] = [];\r\n        for (const inp of inputArr) {\r\n            if (inp.value === null || inp.value === undefined) {\r\n                throw new Error(`Value for input ${inp.description.id} is not set`);\r\n            }\r\n            const marshalledInput = this.marshalInput(inp);\r\n            theInputs.push(marshalledInput);\r\n        }\r\n        const inputs: DataInputsType = {\r\n            input: theInputs\r\n        };\r\n        return inputs;\r\n    }\r\n\r\n    protected marshalInput(input: WpsInput): InputType {\r\n        const id = input.description.id;\r\n        const title = input.description.id;\r\n        const abstract = '';\r\n\r\n        const inputType: InputType = {\r\n            identifier: { value: id },\r\n            title: { value: title },\r\n            _abstract: { value: abstract }\r\n        };\r\n\r\n        if (input.description.reference) {\r\n            inputType.reference = this.marshalReferenceInput(input);\r\n        } else {\r\n            inputType.data = this.marshalDataInput(input);\r\n        }\r\n\r\n        return inputType;\r\n    }\r\n\r\n    protected marshalDataInput(input: WpsInput): DataType {\r\n        let data: DataType;\r\n        switch (input.description.type) {\r\n            case 'literal':\r\n                data = {\r\n                    literalData: { value: String(input.value) }\r\n                };\r\n                break;\r\n            case 'bbox':\r\n                const values: WpsBboxValue = input.value;\r\n                data = {\r\n                    boundingBoxData: {\r\n                        lowerCorner: [values.lllat, values.lllon],\r\n                        upperCorner: [values.urlat, values.urlon]\r\n                    }\r\n                };\r\n                break;\r\n            case 'complex':\r\n                switch (input.description.format) {\r\n                    case 'text/xml':\r\n                        data = {\r\n                            complexData: {\r\n                                content: [input.value],  // @TODO: we assume here that text/xml-data is already stringified\r\n                                mimeType: input.description.format\r\n                            }\r\n                        };\r\n                        break;\r\n                    default:\r\n                        data = {\r\n                            complexData: {\r\n                                content: [JSON.stringify(input.value)],\r\n                                mimeType: input.description.format\r\n                            }\r\n                        };\r\n                }\r\n                break;\r\n            default:\r\n                throw Error(`This input is of type ${input.description.type}. We can only marshal input of type literal, bbox or complex.`);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    protected marshalReferenceInput(input: WpsInput): InputReferenceType {\r\n        const ref: InputReferenceType = {\r\n            href: input.value,\r\n            method: 'GET',\r\n            mimeType: input.description.format\r\n        };\r\n        return ref;\r\n    }\r\n\r\n    marshallGetStatusBody(serverUrl: string, processId: string, statusId: string) {\r\n        // WPS-1.0 does not send a body with a GetStatus request.\r\n        return {};\r\n    }\r\n\r\n    marshallGetResultBody(serverUrl: string, processId: string, jobID: string) {\r\n        // WPS-1.0 does not send a body with a GetStatus request.\r\n        return {};\r\n    }\r\n\r\n    dismissUrl(serverUrl: string, processId: string, jobId: string): string {\r\n        /** this does only work in geoserver:\r\n        return `${serverUrl}?service=WPS&version=1.0.0&request=Dismiss&executionId=${jobId}`; */\r\n        throw new Error('Wps 1.0 does not support Dismiss-operations.');\r\n    }\r\n\r\n    marshalDismissBody(processId: string) {\r\n        throw new Error('Wps 1.0 does not support Dismiss-operations.');\r\n    }\r\n\r\n    unmarshalDismissResponse(jsonResponse: any, serverUrl: string, processId: string): WpsState {\r\n        throw new Error('Wps 1.0 does not support Dismiss-operations.');\r\n    }\r\n}\r\n","import { StatusInfo, DataOutputType, Result } from './wps_2.0';\r\n\r\n\r\nexport const isStatusInfo = (obj: object): obj is StatusInfo => {\r\n    return obj.hasOwnProperty('jobID')\r\n       && obj.hasOwnProperty('status');\r\n};\r\n\r\nexport const isDataOutputType = (obj: object): obj is DataOutputType => {\r\n    return obj.hasOwnProperty('id') &&\r\n        (obj.hasOwnProperty('data') || obj.hasOwnProperty('reference') || obj.hasOwnProperty('output'));\r\n};\r\n\r\nexport const isResult = (obj: object): obj is Result => {\r\n    return (obj.hasOwnProperty('output') && typeof obj['output'] === 'object');\r\n};\r\n","import { WpsMarshaller, WpsInput, WpsOutputDescription, WpsResult, WpsCapability, WpsDataDescription, WpsData, WpsState } from '../wps_datatypes';\r\nimport { WPSCapabilitiesType, ExecuteRequestType, DataInputType, OutputDefinitionType, IWpsExecuteProcessBody, IWpsExecuteResponse, DataOutputType, IGetStatusRequest, Data, IGetResultRequest, IDismissRequest, IDismissResponse } from './wps_2.0';\r\nimport { isDataOutputType, isStatusInfo, isResult } from './helpers';\r\n\r\n\r\nexport class WpsMarshaller200 implements WpsMarshaller {\r\n\r\n    constructor() {}\r\n\r\n    getCapabilitiesUrl(baseurl: string): string {\r\n        return `${baseurl}?service=WPS&request=GetCapabilities&version=2.0.0`;\r\n    }\r\n\r\n    executeUrl(baseurl: string, processId: string): string {\r\n        return `${baseurl}?service=WPS&request=Execute&version=2.0.0&identifier=${processId}`;\r\n    }\r\n\r\n    unmarshalCapabilities(capabilities: WPSCapabilitiesType): WpsCapability[] {\r\n        const out: WpsCapability[] = [];\r\n        capabilities.contents.processSummary.forEach(summary => {\r\n            out.push({\r\n                id: summary.identifier.value\r\n            });\r\n        });\r\n        return out;\r\n    }\r\n\r\n    unmarshalSyncExecuteResponse(responseJson: IWpsExecuteResponse, url: string, processId: string,\r\n        inputs: WpsInput[], outputDescriptions: WpsOutputDescription[]): WpsResult[] {\r\n        const out: WpsResult[] = [];\r\n\r\n        if (isResult(responseJson.value)) {\r\n            for (const output of responseJson.value.output) {\r\n                const outputDescription = outputDescriptions.find(od => od.id === output.id);\r\n                if (!outputDescription) {\r\n                    throw new Error(`Could not find an output-description for the parameter ${output.id}.`);\r\n                }\r\n\r\n                const isReference = outputDescription.reference;\r\n                const datatype = outputDescription.type;\r\n                const format = outputDescription.format;\r\n                let data;\r\n                if (output.reference) {\r\n                    data = output.reference.href || null;\r\n                } else if (output.data) {\r\n                    data = this.unmarshalOutputData(output.data, outputDescription);\r\n                } else {\r\n                    throw new Error(`Output has neither reference nor data field.`);\r\n                }\r\n\r\n                out.push({\r\n                    description: {\r\n                        id: output.id,\r\n                        format: format,\r\n                        reference: isReference,\r\n                        type: datatype\r\n                    },\r\n                    value: data,\r\n                });\r\n            }\r\n        } else if (isStatusInfo(responseJson.value)) {\r\n            const state: WpsState = {\r\n                status: responseJson.value.status,\r\n                jobID: responseJson.value.jobID,\r\n                percentCompleted: responseJson.value.percentCompleted\r\n            };\r\n\r\n            out.push({\r\n                description: {\r\n                    id: processId,\r\n                    reference: true,\r\n                    type: 'status'\r\n                },\r\n                value: state\r\n            });\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    protected unmarshalOutputData(data: Data, description: WpsOutputDescription): any {\r\n        if (description.type === 'complex') {\r\n            switch (data.mimeType) {\r\n                case 'application/vnd.geo+json':\r\n                case 'application/json':\r\n                    return data.content.map((cont: any) => JSON.parse(cont));\r\n                case 'application/WMS':\r\n                    return data.content;\r\n                case 'text/xml':\r\n                    return new XMLSerializer().serializeToString(data.content[0]); // @TODO: better: handle actual xml-data\r\n                default:\r\n                    throw new Error(`Cannot unmarshal complex data of format ${data.mimeType}`);\r\n            }\r\n        } else if (description.type === 'literal') {\r\n            return data.content;\r\n        }\r\n\r\n        throw new Error(`Not yet implemented: ${data}`);\r\n    }\r\n\r\n    unmarshalAsyncExecuteResponse(responseJson: any, url: string, processId: string, inputs: WpsData[], outputDescriptions: WpsDataDescription[]): WpsState {\r\n        return this.unmarshalGetStateResponse(responseJson, url, processId, inputs, outputDescriptions);\r\n    }\r\n\r\n    unmarshalGetStateResponse(responseJson: any, serverUrl: string, processId: string,\r\n        inputs: WpsData[], outputDescriptions: WpsDataDescription[]): WpsState {\r\n        if (isStatusInfo(responseJson.value)) {\r\n            const state: WpsState = {\r\n                status: responseJson.value.status,\r\n                jobID: responseJson.value.jobID,\r\n                percentCompleted: responseJson.value.percentCompleted\r\n            };\r\n            return state;\r\n        } else {\r\n            throw new Error(`Not a status-info: ${responseJson}`);\r\n        }\r\n    }\r\n\r\n    marshalExecBody(processId: string, inputs: WpsInput[], outputs: WpsOutputDescription[], async: boolean) {\r\n        const inputsMarshalled = this.marshalInputs(inputs);\r\n        const outputsMarshalled = this.marshalOutputs(outputs);\r\n\r\n        const bodyValue: ExecuteRequestType = {\r\n            TYPE_NAME: 'WPS_2_0.ExecuteRequestType',\r\n            service: 'WPS',\r\n            version: '2.0.0',\r\n            identifier: { value: processId },\r\n            input: inputsMarshalled,\r\n            output: outputsMarshalled,\r\n            mode: async ? 'async' : 'sync',\r\n            response: 'document'\r\n        };\r\n\r\n        const body: IWpsExecuteProcessBody = {\r\n            name: {\r\n                key: '{http://www.opengis.net/wps/2.0}Execute',\r\n                localPart: 'Execute',\r\n                namespaceURI: 'http://www.opengis.net/wps/2.0',\r\n                prefix: 'wps',\r\n                string: '{http://www.opengis.net/wps/2.0}wps:Execute'\r\n            },\r\n            value: bodyValue\r\n        };\r\n\r\n        return body;\r\n    }\r\n\r\n    private marshalInputs(inputs: WpsData[]): DataInputType[] {\r\n        return inputs.map(i => {\r\n            if (i.description.reference) {\r\n                return {\r\n                    id: i.description.id,\r\n                    reference: {\r\n                        href: i.value,\r\n                        mimeType: i.description.format,\r\n                    }\r\n                };\r\n            } else {\r\n                return {\r\n                    id: i.description.id,\r\n                    data: {\r\n                        content: [JSON.stringify(i.value)],\r\n                        mimeType: i.description.format\r\n                    }\r\n                };\r\n            }\r\n        });\r\n    }\r\n\r\n    private marshalOutputs(outputs: WpsDataDescription[]): OutputDefinitionType[] {\r\n        return outputs.map(o => {\r\n            return {\r\n                id: o.id,\r\n                mimeType: o.format,\r\n                transmission: o.reference ? 'reference' : 'value'  // @TODO: maybe just comment out this line?\r\n            };\r\n        });\r\n    }\r\n\r\n    marshallGetStatusBody(serverUrl: string, processId: string, statusId: string) {\r\n        const request: IGetStatusRequest = {\r\n            name: {\r\n                key: '{http://www.opengis.net/wps/2.0}GetStatus',\r\n                localPart: 'GetStatus',\r\n                namespaceURI: 'http://www.opengis.net/wps/2.0',\r\n                prefix: 'wps',\r\n                string: '{http://www.opengis.net/wps/2.0}wps:GetStatus'\r\n             },\r\n             value: {\r\n                 jobID: statusId,\r\n                 service: 'WPS',\r\n                 version: '2.0.0'\r\n             }\r\n        };\r\n        return request;\r\n    }\r\n\r\n    marshallGetResultBody(serverUrl: string, processId: string, jobID: string) {\r\n        const request: IGetResultRequest = {\r\n            name: {\r\n                key: '{http://www.opengis.net/wps/2.0}GetResult',\r\n                localPart: 'GetResult',\r\n                namespaceURI: 'http://www.opengis.net/wps/2.0',\r\n                prefix: 'wps',\r\n                string: '{http://www.opengis.net/wps/2.0}wps:GetResult'\r\n            },\r\n            value: {\r\n                service: 'WPS',\r\n                version: '2.0.0',\r\n                jobID: jobID\r\n            }\r\n        };\r\n        return request;\r\n    }\r\n\r\n    dismissUrl(serverUrl: string, processId: string, jobId: string): string {\r\n        return serverUrl;\r\n    }\r\n\r\n    marshalDismissBody(jobId: string) {\r\n        const body: IDismissRequest = {\r\n            name: {\r\n                key: '{http://www.opengis.net/wps/2.0}Dismiss',\r\n                localPart: 'Dismiss',\r\n                namespaceURI: 'http://www.opengis.net/wps/2.0',\r\n                prefix: 'wps',\r\n                string: '{http://www.opengis.net/wps/2.0}wps:Dismiss'\r\n             },\r\n             value: {\r\n                 jobID: jobId,\r\n                 service: 'WPS',\r\n                 version: '2.0.0'\r\n             }\r\n        };\r\n        return body;\r\n    }\r\n\r\n    unmarshalDismissResponse(jsonResponse: IDismissResponse, serverUrl: string, processId: string): WpsState {\r\n        const state: WpsState = {\r\n            status: jsonResponse.value.status,\r\n            jobID: jsonResponse.value.jobID\r\n        };\r\n        return state;\r\n    }\r\n}\r\n","import { Observable, timer, of, forkJoin } from 'rxjs';\r\nimport { tap, map, mergeMap, retryWhen, delay } from 'rxjs/operators';\r\n\r\n\r\n\r\n\r\nexport function pollUntil<T>(\r\n    task$: Observable<T>, predicate: (results: any) => boolean, doWhile?: (t: T | null) => any, minWaitTime: number = 1000): Observable<T> {\r\n\r\n    if (doWhile) {\r\n        doWhile(null);\r\n    }\r\n\r\n    const tappedTask$: Observable<T> = task$.pipe(\r\n        tap((r: any) => {\r\n            if (doWhile) {\r\n                doWhile(r);\r\n            }\r\n        })\r\n    );\r\n\r\n    const requestTakesAtLeast$: Observable<T> = forkJoin(tappedTask$, timer(minWaitTime)).pipe(\r\n        map(r => r[0])\r\n    );\r\n\r\n    const polledRequest$: Observable<T> = requestTakesAtLeast$.pipe(\r\n        mergeMap((response: any) => {\r\n            if (predicate(response)) {\r\n                // console.log(`obtained correct answer ${response}`);\r\n                return of(response);\r\n            } else {\r\n                // console.log(`obtained false answer ${response}. trying again...`);\r\n                return polledRequest$;\r\n            }\r\n        })\r\n    );\r\n\r\n    return polledRequest$;\r\n}\r\n\r\n\r\nexport function delayedRetry(delayMs: number, maxRetries = 3) {\r\n    let attempts = 1;\r\n\r\n    return (src$: Observable<any>) => {\r\n        return src$.pipe(\r\n            // If an error occurs ...\r\n            retryWhen((error$: Observable<any>) => {\r\n                return error$.pipe(\r\n                    delay(delayMs), // <- in any case, first wait a little while ...\r\n                    mergeMap((error: any) => {\r\n                        if (error.status && error.status === 400) {\r\n                            // In case of a server error, repeating won't help.\r\n                            throw error;\r\n                        } else if (attempts <= maxRetries) {\r\n                            console.log('http-error. Retrying ...');\r\n                            attempts += 1;\r\n                            return of(error); // <- an observable causes request to be retried\r\n                        } else {\r\n                            console.log(`Persistent http-errors after ${attempts} attempts. Giving up.`);\r\n                            throw error; // an error causes request to be given up on.\r\n                        }\r\n                    })\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n}\r\n","import { WpsData } from \"./wps_datatypes\";\r\nimport { Observable, of } from \"rxjs\";\r\n\r\n\r\nexport interface Cache {\r\n    set(input: object, output: WpsData[]);\r\n    get(input: object): Observable<WpsData[] | null>;\r\n}\r\n\r\nexport class FakeCache implements Cache {\r\n    set(input: object, output: WpsData[]) {\r\n    }\r\n\r\n    get(input: object): Observable<WpsData[] | null> {\r\n        return of(null);\r\n    }\r\n}\r\n","import { WpsMarshaller, WpsInput, WpsVerion, WpsResult, WpsOutputDescription, WpsData, WpsState, isWpsState, WpsDataDescription } from './wps_datatypes';\r\nimport { WpsMarshaller100 } from './wps100/wps_marshaller_1.0.0';\r\nimport { WpsMarshaller200 } from './wps200/wps_marshaller_2.0.0';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, switchMap, tap, share, mergeMap } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport * as XLink_1_0_Factory from 'w3c-schemas/lib/XLink_1_0'; const XLink_1_0 = XLink_1_0_Factory.XLink_1_0;\r\nimport * as OWS_1_1_0_Factory from 'ogc-schemas/lib/OWS_1_1_0'; const OWS_1_1_0 = OWS_1_1_0_Factory.OWS_1_1_0;\r\nimport * as OWS_2_0_Factory from 'ogc-schemas/lib/OWS_2_0'; const OWS_2_0 = OWS_2_0_Factory.OWS_2_0;\r\nimport * as WPS_1_0_0_Factory from 'ogc-schemas/lib/WPS_1_0_0'; const WPS_1_0_0 = WPS_1_0_0_Factory.WPS_1_0_0;\r\nimport * as WPS_2_0_Factory from 'ogc-schemas/lib/WPS_2_0'; const WPS_2_0 = WPS_2_0_Factory.WPS_2_0;\r\nimport { pollUntil, delayedRetry } from './utils/polling';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Jsonix } from '@boundlessgeo/jsonix';\r\nimport { Cache, FakeCache } from './cache';\r\n\r\n\r\n\r\n/**\r\n * The Wps-client abstracts away the differences between Wps1.0.0 and Wps2.0.0\r\n * There are two layers of marshalling:\r\n *  - the Wps-marshaller marshals user-facing data to wps-specific types\r\n *  - Jsonix marshals wps-specific data to xml.\r\n * user-facing data -> wpsmarshaller -> Wps-type-specific data -> Jsonix-marhsaller -> XML ->\r\n * -> webclient -> WPS -> XML -> Jsonix-unmarshaller -> Wps-type-specific data -> wpsmarshaller -> user-facing data\r\n */\r\n@Injectable()\r\nexport class WpsClient {\r\n\r\n    private version: WpsVerion;\r\n    private xmlmarshaller: any;\r\n    private xmlunmarshaller: any;\r\n    private wpsmarshaller: WpsMarshaller;\r\n    private cache: Cache = new FakeCache();\r\n\r\n    constructor(\r\n        @Inject('WpsVersion') version: WpsVerion = '1.0.0',\r\n        private webclient: HttpClient,\r\n        @Inject('WpsCache') cache?: Cache\r\n    ) {\r\n        this.version = version;\r\n        if (cache) this.cache = cache;\r\n        let context;\r\n        if (this.version === '1.0.0') {\r\n            this.wpsmarshaller = new WpsMarshaller100();\r\n            context = new Jsonix.Context([XLink_1_0, OWS_1_1_0, WPS_1_0_0]);\r\n        } else if (this.version === '2.0.0') {\r\n            this.wpsmarshaller = new WpsMarshaller200();\r\n            context = new Jsonix.Context([XLink_1_0, OWS_2_0, WPS_2_0]);\r\n        } else {\r\n            throw new Error('You entered a WPS version other than 1.0.0 or 2.0.0.');\r\n        }\r\n        this.xmlunmarshaller = context.createUnmarshaller();\r\n        this.xmlmarshaller = context.createMarshaller();\r\n    }\r\n\r\n\r\n    getCapabilities(url: string): Observable<any> {\r\n        const getCapabilitiesUrl = this.wpsmarshaller.getCapabilitiesUrl(url);\r\n        return this.getRaw(getCapabilitiesUrl).pipe(\r\n            map((response: any) => {\r\n                const responseJson = this.xmlunmarshaller.unmarshalString(response);\r\n                return this.wpsmarshaller.unmarshalCapabilities(responseJson.value);\r\n            }) // @TODO: handle case when instead of WpsCapabilites an ExceptionReport is returned\r\n        );\r\n    }\r\n\r\n\r\n    describeProcess(processId: string): Observable<any> {\r\n        throw new Error('Not implemented yet');\r\n    }\r\n\r\n\r\n    executeAsync(url: string, processId: string, inputs: WpsInput[], outputs: WpsOutputDescription[],\r\n        pollingRate: number = 1000, tapFunction?: (response: WpsState | null) => any): Observable<WpsResult[]> {\r\n\r\n        const executeRequest$: Observable<WpsState> = this.executeAsyncS(url, processId, inputs, outputs);\r\n\r\n        const query$ = executeRequest$.pipe(\r\n\r\n            // poll until suceeded\r\n            mergeMap((currentState: WpsState) => {\r\n                const nextState$: Observable<WpsState> = this.getNextState(currentState, url, processId, inputs, outputs);\r\n\r\n                const poll$: Observable<WpsState> = pollUntil<WpsState>(\r\n                    nextState$,\r\n                    (response: WpsState) => {\r\n                        return response.status === 'Succeeded';\r\n                    },\r\n                    tapFunction,\r\n                    pollingRate\r\n                );\r\n\r\n                return poll$;\r\n            }),\r\n\r\n            // fetch results\r\n            mergeMap((lastState: WpsState) => {\r\n                return this.fetchResults(lastState, url, processId, inputs, outputs);\r\n            }),\r\n\r\n            // In case of errors:\r\n            tap((response: WpsData[]) => {\r\n                for (const result of response) {\r\n                    if (result.description.type === 'error') {\r\n                        console.log('server responded with 200, but body contained an error-result: ', result);\r\n                        throw new Error(result.value);\r\n                    }\r\n                }\r\n            })\r\n        );\r\n\r\n        return this.cachedQuery(url, processId, inputs, outputs, query$);\r\n    }\r\n\r\n    private cachedQuery(url: string, processId: string, inputs: WpsInput[],\r\n        outputs: WpsOutputDescription[], query$: Observable<WpsData[]>): Observable<WpsData[]> {\r\n\r\n        const cachedResponse$: Observable<WpsResult[] | null> = this.cache.get({url, processId, inputs, outputs});\r\n        return cachedResponse$.pipe(\r\n            switchMap((results) => {\r\n                if (results) {\r\n                    return of(results);\r\n                } else {\r\n                    return query$.pipe(\r\n                        tap((response: WpsData[]) => {\r\n                            this.cache.set({url, processId, inputs, outputs}, response);\r\n                        })\r\n                    );\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    private getNextState(currentState: WpsState, serverUrl: string, processId: string, inputs: WpsInput[],\r\n        outputDescriptions: WpsOutputDescription[]): Observable<WpsState> {\r\n\r\n        let request$: Observable<string>;\r\n        if (this.version === '1.0.0') {\r\n\r\n            if (!currentState.statusLocation) {\r\n                throw Error('No status location');\r\n            }\r\n            request$ = this.getRaw(currentState.statusLocation);\r\n\r\n        } else if (this.version === '2.0.0') {\r\n\r\n            if (!currentState.jobID) {\r\n                throw Error('No job-Id');\r\n            }\r\n            const execbody = this.wpsmarshaller.marshallGetStatusBody(serverUrl, processId, currentState.jobID);\r\n            const xmlExecbody = this.xmlmarshaller.marshalString(execbody);\r\n\r\n            request$ = this.postRaw(serverUrl, xmlExecbody);\r\n\r\n        } else {\r\n            throw new Error(`'GetStatus' has not yet been implemented for this WPS-Version (${this.version}).`);\r\n        }\r\n\r\n        const request1$: Observable<WpsState> = request$.pipe(\r\n            delayedRetry(2000, 2),\r\n            map((xmlResponse: string) => {\r\n                const jsonResponse = this.xmlunmarshaller.unmarshalString(xmlResponse);\r\n                const output: WpsData[] | WpsState =\r\n                    this.wpsmarshaller.unmarshalGetStateResponse(jsonResponse, serverUrl, processId, inputs, outputDescriptions);\r\n                return output;\r\n            })\r\n        );\r\n\r\n        return request1$;\r\n    }\r\n\r\n    private fetchResults(lastState: WpsState, serverUrl: string, processId: string, inputs: WpsInput[],\r\n        outputDescriptions: WpsOutputDescription[]): Observable<WpsData[]> {\r\n\r\n        if (lastState.results) { // WPS 1.0: results should already be in last state\r\n            return of(lastState.results);\r\n        } else { // WPS 2.0: get results with post request\r\n\r\n            if (!lastState.jobID) {\r\n                throw new Error(`You want me to get a result, but I can't find a jobId. I don't know what to do now!`);\r\n            }\r\n\r\n            const execBody = this.wpsmarshaller.marshallGetResultBody(serverUrl, processId, lastState.jobID);\r\n            const xmlExecBody = this.xmlmarshaller.marshalString(execBody);\r\n\r\n            return this.postRaw(serverUrl, xmlExecBody).pipe(\r\n                map((xmlResponse: string) => {\r\n                    const jsonResponse = this.xmlunmarshaller.unmarshalString(xmlResponse);\r\n                    const output = this.wpsmarshaller.unmarshalSyncExecuteResponse(jsonResponse, serverUrl, processId, inputs, outputDescriptions);\r\n                    return output;\r\n                }),\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    private executeAsyncS(url: string, processId: string, inputs: WpsInput[],\r\n        outputDescriptions: WpsOutputDescription[]): Observable<WpsState> {\r\n\r\n        const executeUrl = this.wpsmarshaller.executeUrl(url, processId);\r\n        const execbody = this.wpsmarshaller.marshalExecBody(processId, inputs, outputDescriptions, true);\r\n        const xmlExecbody = this.xmlmarshaller.marshalString(execbody);\r\n\r\n        return this.postRaw(executeUrl, xmlExecbody).pipe(\r\n            map((xmlResponse: string) => {\r\n                const jsonResponse = this.xmlunmarshaller.unmarshalString(xmlResponse);\r\n                const output: WpsState =\r\n                    this.wpsmarshaller.unmarshalAsyncExecuteResponse(jsonResponse, url, processId, inputs, outputDescriptions);\r\n                return output;\r\n            })\r\n        );\r\n    }\r\n\r\n    execute(url: string, processId: string, inputs: WpsInput[],\r\n        outputDescriptions: WpsOutputDescription[]): Observable<WpsResult[]> {\r\n\r\n        const executeUrl = this.wpsmarshaller.executeUrl(url, processId);\r\n        const execbody = this.wpsmarshaller.marshalExecBody(processId, inputs, outputDescriptions, false);\r\n        const xmlExecbody = this.xmlmarshaller.marshalString(execbody);\r\n\r\n        return this.postRaw(executeUrl, xmlExecbody).pipe(\r\n            map((xmlResponse: string) => {\r\n                const jsonResponse = this.xmlunmarshaller.unmarshalString(xmlResponse);\r\n                const output: WpsData[] =\r\n                    this.wpsmarshaller.unmarshalSyncExecuteResponse(jsonResponse, url, processId, inputs, outputDescriptions);\r\n                return output;\r\n            })\r\n        );\r\n    }\r\n\r\n    dismiss(serverUrl: string, processId: string, jobId: string): Observable<any> {\r\n\r\n        const dismissUrl = this.wpsmarshaller.dismissUrl(serverUrl, processId, jobId);\r\n        const dismissBody = this.wpsmarshaller.marshalDismissBody(jobId);\r\n        const xmlDismissBody = this.xmlmarshaller.marshalString(dismissBody);\r\n\r\n        return this.postRaw(dismissUrl, xmlDismissBody).pipe(\r\n            map((xmlResponse: string) => {\r\n                const jsonResponse = this.xmlunmarshaller.unmarshalString(xmlResponse);\r\n                const output = this.wpsmarshaller.unmarshalDismissResponse(jsonResponse, serverUrl, processId);\r\n                return output;\r\n            })\r\n        );\r\n    }\r\n\r\n    postRaw(url: string, xmlBody: string): Observable<string> {\r\n        const headers = {\r\n            'Content-Type': 'text/xml',\r\n            'Accept': 'text/xml, application/xml'\r\n        };\r\n        return this.webclient.post(url, xmlBody, { headers, responseType: 'text' }).pipe(\r\n            delayedRetry(2000, 2),\r\n            share()  // turning hot: to make sure that multiple subscribers dont cause multiple requests\r\n        );\r\n    }\r\n\r\n    getRaw(url: string): Observable<string> {\r\n        const headers = {\r\n            'Accept': 'text/xml, application/xml'\r\n        };\r\n        return this.webclient.get(url, { headers, responseType: 'text' }).pipe(\r\n            delayedRetry(2000, 2)\r\n        );\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { OwcJsonService } from './owc/owc-json.service';\r\nimport { WmtsClientService } from './wmts/wmtsclient.service';\r\nimport { WpsClient } from './wps/wpsclient';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [],\r\n  exports: [],\r\n  providers: [OwcJsonService, WmtsClientService, WpsClient]\r\n})\r\nexport class ServicesOgcModule { }\r\n","/**\r\n * Type definitions for OGC OWS Context Geo Encoding Standard Version: 1.0\r\n * http://docs.opengeospatial.org/is/14-055r2/14-055r2.html\r\n * Definitions by: Mathias Boeck\r\n * TypeScript Version: 2.5.3\r\n *\r\n * depends on @types/geojson@^7946.0.2\r\n */\r\nimport * as GeoJSON from 'geojson';\r\n\r\n\r\n/**\r\n * The OWS Context describes Metadata, API, Time Range\r\n * http://www.owscontext.org/owc_user_guide/C0_userGuide.html#truethe-ows-context-document-structure\r\n * If no bounding box is specified, do not change the current view when the context document is loaded.\r\n */\r\nexport interface IOwsContext extends GeoJSON.FeatureCollection<GeoJSON.GeometryObject | null, GeoJSON.GeoJsonProperties> {\r\n  /**\r\n   * The id element defines a mandatory reference to the identification of the Context document.\r\n   * The content for the id element SHALL be an IRI, as defined by IETF [RFC3987]\r\n   */\r\n  id: string | number;\r\n  properties: {\r\n    links: { profiles: string[] } | IOwsLinks[];\r\n    /** Language of Context document content */\r\n    lang: LangString;\r\n    /** Title for the Context document */\r\n    title: string;\r\n    /** Date of a creation or update of the Context document */\r\n    updated: DateString;\r\n    /** Description of the Context document purpose or content */\r\n    subtitle?: string;\r\n    /** This element is optional and indicates the authors array of the Context document */\r\n    authors?: IOwsAuthor[];\r\n    /** Identifier for the publisher of the Context document */\r\n    publisher?: string;\r\n    /** Tool/application used to create the Context document and its properties */\r\n    creator?: IOwsCreator;\r\n    /**\r\n     * Properties of the display in use when the context document was created (for display based applications only).\r\n     * This class is optional and intended for creator applications that use a graphical user interface with a geographical display within a fixed pixel size and not scalable to different computational devices \r\n     */\r\n    display?: IOwsCreatorDisplay[];\r\n    /** Information about rights held in and over the Context document */\r\n    rights?: string;\r\n    /**\r\n    * Date or range of dates relevant to the resource \r\n    * time range which is expected to be of interest to the user.\r\n    */\r\n    date?: DateString;\r\n    /** This array is an optional and expresses categories related to this Context document */\r\n    categories?: IOwsCategorie[];\r\n    /** Extension Any other element */\r\n    [k: string]: any;\r\n  };\r\n  /** Ordered List of Resources available on the Context document */\r\n  features: IOwsResource[];\r\n  /** Extension Any other element */\r\n  [k: string]: any;\r\n}\r\n\r\n/**\r\n * Each layer (a.k.a. feature) in a context document is known as a ‘Resource’\r\n * A Resource reference a set of geospatial information to be treated as a logical element.\r\n * The resources are ordered such that the first item in the document is to be displayed at the front.\r\n * This defines the order in which layers are drawn.\r\n * A resource (which in GIS terms is a layer) can have a number of offerings, and each offering\r\n * is focussed on a particular representation of information.\r\n * These can be one of a number of OGC Web Services, specifically WMS, WMTS, WFS, WCS, WPS and CSW,\r\n * or one of a number of inline or referenced formats, specifically GML, KML, GeoTIFF, GMLJP2, GMLCOV,\r\n * or a custom offering type defined in a profile or by an organisation.\r\n * http://www.owscontext.org/owc_user_guide/C0_userGuide.html#truethe-ows-context-document-structure\r\n */\r\nexport interface IOwsResource extends GeoJSON.Feature {\r\n  /**\r\n   * Unambiguous reference to the identification of the Context resource (IRI)\r\n   * String type that SHALL contain a URI value\r\n   */\r\n  id: string | number;\r\n  properties: IOwsResourceProperties;\r\n  [k: string]: any;\r\n}\r\n\r\nexport interface IOwsResourceProperties {\r\n  /** Title given to the Context resource */\r\n  title: string;\r\n  /** Date of the last update of the Context resource */\r\n  updated: DateString;\r\n  /** The purpose is to provide a generic description of the content in a format understandable by generic readers */\r\n  abstract?: string;\r\n  /** This element is optional and indicates the authors array of the Context resource */\r\n  authors?: IOwsAuthor[];\r\n  /** Entity responsible for making the Context resource available */\r\n  publisher?: string;\r\n  /** Information about rights held in and over the Context resource */\r\n  rights?: string;\r\n  /** Date or range of dates relevant to the Context resource */\r\n  date?: DateString;\r\n  /** This element is optional and can contain a number of offerings defined by the class OWC:Offering */\r\n  offerings?: IOwsOffering[];\r\n  /** Flag value indicating to the client if the Context resource should be displayed by default */\r\n  active?: boolean;\r\n  /** This array is optional and expresses a category related to the Context resource */\r\n  categories?: IOwsCategorie[];\r\n  /** Minimum scale for the display of the Context resource Double */\r\n  minscaledenominator?: number;\r\n  /** Maximum scale for the display of the Context resource Double */\r\n  maxscaledenominator?: number;\r\n  /** Definition of the folder in which the resource is placed \r\n  * The folder attribute is intended to support the concept present in many clients or organising layers into folders.\r\n  */\r\n  folder?: string;\r\n  /** TODO!!! links is defined as Object but in the examples as Array  */\r\n  links?: IOwsLinks[];\r\n  [k: string]: any;\r\n}\r\n\r\n\r\n/**\r\n * In reality a resource can be realised in a number of different ways, and so an OWC document allows various options to be specified.\r\n * These are known as offerings.\r\n * The intention is that these are, as far as is possible by the format used,\r\n * equivalent and no priority is assigned to their order in the standard.\r\n * They are intended to be alternatives that the client can use to allow it to visualise or use the resource.\r\n *\r\n * So for example four offerings, a WMS, a WFS with portrayal as SLD, and an inline GML Offering again with portrayal as SLD.\r\n * Different clients could use these offerings as appropriate:\r\n * - a simple browser based client could use the WMS offering provided, using the standard portrayal\r\n * - a more sophisticated client, could use the WFS offering and the associated SLD Document.\r\n *\r\n * There are two types of offering, service offerings and data offerings.\r\n * A service offering has a service request (in the form of a capabilities request and a data request)\r\n * and optional content and styling elements.\r\n * A data offering has a content element and optional styling elements.\r\n *\r\n *\r\n * http://www.owscontext.org/owc_user_guide/C0_userGuide.html#truemultiple-offerings-and-priority\r\n */\r\nexport interface IOwsOffering {\r\n  /** Extension Offerings with type - string */\r\n  code: WMS_Offering | WFS_Offering | WCS_Offering | WPS_Offering | CSW_Offering | WMTS_Offering |\r\n  GML_Offering | KML_Offering | GeoTIFF_Offering | GMLJP2_Offering | GMLCOV_Offering | string;\r\n  /** Web Service Offerings provide their operations */\r\n  operations?: IOwsOperation[];\r\n  /** Content Offerings allow content to be embedded in an OWS Context document. */\r\n  contents?: IOwsContent[];\r\n  styles?: IOwsStyleSet[];\r\n  [k: string]: any;\r\n}\r\n\r\n\r\nexport interface IOwsCreator {\r\n  title?: string;\r\n  uri?: string;\r\n  version?: string;\r\n}\r\n\r\nexport interface IOwsAuthor {\r\n  /** Entity primarily responsible for making the Context document */\r\n  name?: string;\r\n  email?: string;\r\n  uri?: string;\r\n  [k: string]: any;\r\n}\r\n\r\nexport interface IOwsCategorie {\r\n  scheme?: string;\r\n  /** Category related to this context document. It MAY have a related code-list that is identified by the scheme attribute */\r\n  term?: string;\r\n  label?: string;\r\n}\r\n\r\nexport interface IOwsLinks {\r\n  rel: string;\r\n  href?: string;\r\n  type?: string;\r\n  title?: string;\r\n  /** Reference to a description of the Context resource in alternative format */\r\n  alternates?: string;\r\n  lang?: LangString;\r\n  [k: string]: any;\r\n}\r\n\r\nexport interface IOwsCreatorApplication {\r\n  title?: string;\r\n  uri?: string;\r\n  version?: string;\r\n}\r\n\r\nexport interface IOwsCreatorDisplay {\r\n  /** Width measured in pixels of the display showing the Area of Interest */\r\n  pixelWidth?: number;\r\n  /** Width measured in pixels of the display showing by the Area of Interest */\r\n  pixelHeight?: number;\r\n  /** The size of a pixel of the display in milimeters \r\n   * (combined with the previous ones allows for the real display size to be calculated) */\r\n  mmPerPixel?: number;\r\n  [k: string]: any;\r\n}\r\n\r\n/**\r\n * Most service offerings have two operations, a ‘GetCapabilities’ operation and a data operation such as ‘GetMap’ for WMS \r\n */\r\nexport interface IOwsOperation {\r\n  /**\r\n   * The code identifies the type of operation.\r\n   * Valid types are defined within each specific extension within the OWS Context conceptual model [OGC 12-080].\r\n   */\r\n  code: string;\r\n  /** method defines the access method, for example GET or POST. */\r\n  method: string;\r\n  type?: string;\r\n  /** href is the URI containing the definition of the request */\r\n  href?: string;\r\n  request?: IOwsContent;\r\n  result?: IOwsContent;\r\n  /** Extension of Operation */\r\n  [k: string]: any;\r\n}\r\n\r\n\r\nexport interface IOwsContent {\r\n  /** MIME type of the Content */\r\n  type: string;\r\n  href?: string;\r\n  title?: string;\r\n  /** String type, not empty that can contain any text encoded media type */\r\n  content?: string;\r\n  [k: string]: any;\r\n}\r\n\r\nexport interface IOwsStyleSet {\r\n  name: string;\r\n  title: string;\r\n  abstract?: string;\r\n  default?: boolean;\r\n  legendURL?: string;\r\n  content?: IOwsContent;\r\n  [k: string]: any;\r\n}\r\n\r\n\r\n\r\n/** ISO-8601 format e.g. YYYY-MM-DDThh:mm:ssZ or YYYY-MM-DDThh:mm:ssZ/YYYY-MM-DDThh:mm:ssZ */\r\nexport type DateString = string;\r\n\r\n\r\n/** RFC-3066 code e.g. en,de */\r\nexport type LangString = string;\r\n\r\n\r\nexport type WMS_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/wms' |\r\n    'http://schemas.opengis.net/wms/1.1.1' | 'http://schemas.opengis.net/wms/1.1.0';\r\nexport type WFS_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/wfs';\r\nexport type WCS_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/wcs';\r\nexport type WPS_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/wps';\r\nexport type CSW_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/csw';\r\nexport type WMTS_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/wmts';\r\nexport type GML_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/gml';\r\nexport type KML_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/kml';\r\nexport type GeoTIFF_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/geotiff';\r\nexport type GMLJP2_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/gmljp2';\r\nexport type GMLCOV_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/gmlcov';\r\n","import { IOwsContext, IOwsResource, IOwsOffering, WMS_Offering, WFS_Offering, WCS_Offering, WPS_Offering,\r\n    CSW_Offering, WMTS_Offering, GML_Offering, KML_Offering, GeoTIFF_Offering, GMLJP2_Offering,\r\n    GMLCOV_Offering, IOwsResourceProperties } from './owc-json';\r\n\r\n\r\n\r\nimport * as GeoJSON from 'geojson';\r\nexport interface IEocOwsContext extends IOwsContext {\r\n    features: IEocOwsResource[];\r\n    projections?: IEocOwsProjection[];\r\n}\r\n\r\nexport interface IEocOwsResource extends IOwsResource {\r\n    properties: IEocOwsResourceProperties;\r\n}\r\n\r\nexport interface IEocOwsResourceProperties extends IOwsResourceProperties {\r\n    opacity?: number;\r\n    attribution?: string;\r\n    shards?: string;\r\n    dimensions?: IEocOwsResourceDimensions;\r\n}\r\n\r\nexport interface IEocOwsResourceDimensions {\r\n  time?: IEocOwsResourceDimension;\r\n  elevation?: IEocOwsResourceDimension;\r\n  [k: string]: any;\r\n}\r\n\r\nexport interface IEocOwsResourceDimension {\r\n  /** Default step display of time slider */\r\n  display?: string;\r\n  units: string;\r\n  value?: string;\r\n}\r\n\r\nexport interface IEocOwsOffering extends IOwsOffering {\r\n    code: WMS_Offering | WFS_Offering | WCS_Offering | WPS_Offering | CSW_Offering |\r\n        WMTS_Offering | GML_Offering | KML_Offering | GeoTIFF_Offering | GMLJP2_Offering |\r\n        GMLCOV_Offering | GeoJson_Offering | string;\r\n    legendUrl?: string;\r\n    iconUrl?: string;\r\n    title?: string;\r\n}\r\n\r\nexport interface IEocWmsOffering extends IEocOwsOffering {\r\n    code: WMS_Offering;\r\n}\r\n\r\nexport interface IEocOwsWmtsOffering extends IEocOwsOffering {\r\n    code: WMTS_Offering;\r\n    matrixSets?: IEocOwsWmtsMatrixSet[];\r\n}\r\n\r\nexport interface IEocOwsWmtsMatrixSet {\r\n    /** EPSG-Code */\r\n    srs: string;\r\n    matrixSet: string;\r\n    matrixIds: string[];\r\n    origin: {\r\n        x: number,\r\n        y: number\r\n    };\r\n    resolutions: number[];\r\n    tilesize: {\r\n        height: number,\r\n        width: number\r\n    };\r\n}\r\n\r\nexport interface IEocOwsProjection {\r\n    bbox: GeoJSON.BBox;\r\n    code: string;\r\n    default?: boolean;\r\n    unit?: string | number;\r\n}\r\n/**\r\n* http://www.owscontext.org/owc_user_guide/C0_userGuide.html#trueextension-offerings\r\n*/\r\nexport type GeoJson_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/geojson';\r\nexport type Xyz_Offering = 'http://www.opengis.net/spec/owc-geojson/1.0/req/xyz';\r\n","export type WpsVerion = '1.0.0' | '2.0.0';\r\nexport type WpsDataFormat = 'application/vnd.geo+json' | 'application/json' | 'application/WMS' |\r\n                            'application/xml' | 'text/xml' | 'application/text' | 'image/geotiff' |\r\n                            'text/plain';\r\n\r\n\r\nexport type ProcessId = string;\r\nexport type ProductId = string;\r\n\r\nexport interface WpsDataDescription {\r\n    id: ProductId;\r\n    type: 'literal' | 'complex' | 'bbox' | 'status' | 'error';\r\n    reference: boolean;\r\n    format?: WpsDataFormat;\r\n    description?: string;\r\n    defaultValue?: any;\r\n}\r\nexport type WpsInputDescription = WpsDataDescription;\r\nexport type WpsOutputDescription = WpsDataDescription;\r\n\r\n\r\nexport interface WpsData {\r\n    description: WpsDataDescription;\r\n    value: any;\r\n}\r\nexport type WpsInput = WpsData;\r\nexport type WpsResult = WpsData;\r\n\r\nexport interface WpsBboxDescription {\r\n    id: ProductId;\r\n    type: 'bbox';\r\n    reference: boolean;\r\n    format?: WpsDataFormat;\r\n    description?: string;\r\n    defaultValue?: any;\r\n}\r\n\r\nexport interface WpsBboxValue {\r\n    crs: string;\r\n    lllon: number;\r\n    lllat: number;\r\n    urlon: number;\r\n    urlat: number;\r\n}\r\n\r\nexport const isBbox = (obj: object): obj is WpsBboxValue => {\r\n    return (\r\n        obj.hasOwnProperty('crs') &&\r\n        obj.hasOwnProperty('lllon') &&\r\n        obj.hasOwnProperty('lllat') &&\r\n        obj.hasOwnProperty('urlon') &&\r\n        obj.hasOwnProperty('urlat')\r\n    );\r\n};\r\n\r\n\r\nexport interface WpsState {\r\n    status: 'Succeeded' | 'Failed' | 'Accepted' | 'Running' | 'Dismissed';\r\n    percentCompleted?: number;\r\n    /** WPS 2.0 only */\r\n    jobID?: string;\r\n    /** WPS 1.0 only */\r\n    statusLocation?: string;\r\n    /** WPS 1.0 only: a success-state already contains the results */\r\n    results?: WpsData[];\r\n}\r\n\r\nexport function isWpsState(obj: object): obj is WpsState {\r\n    return obj && obj.hasOwnProperty('status') && (obj.hasOwnProperty('jobID') || obj.hasOwnProperty('statusLocation'));\r\n}\r\n\r\n\r\nexport interface WpsBboxData {\r\n    description: WpsBboxDescription;\r\n    value: WpsBboxValue;\r\n}\r\n\r\nexport interface WpsCapability {\r\n    id: string;\r\n}\r\n\r\n\r\nexport interface WpsMarshaller {\r\n\r\n    executeUrl(url: string, processId: string): string;\r\n    dismissUrl(serverUrl: string, processId: string, jobId: string): string;\r\n    getCapabilitiesUrl(baseurl: string): string;\r\n\r\n    marshalExecBody(processId: string, inputs: WpsInput[], outputs: WpsOutputDescription[], async: boolean): any;\r\n    marshallGetStatusBody(serverUrl: string, processId: string, statusId: string): any;\r\n    marshallGetResultBody(serverUrl: string, processId: string, jobID: string): any;\r\n    marshalDismissBody(jobId: string): any;\r\n\r\n    unmarshalCapabilities(capabilitiesJson: any): WpsCapability[];\r\n    unmarshalSyncExecuteResponse(responseJson: any, url: string, processId: string, inputs: WpsInput[], outputDescriptions: WpsOutputDescription[]): WpsResult[];\r\n    unmarshalAsyncExecuteResponse(responseJson: any, url: string, processId: string, inputs: WpsInput[], outputDescriptions: WpsOutputDescription[]): WpsState;\r\n    unmarshalGetStateResponse(jsonResponse: any, serverUrl: string, processId: string, inputs: WpsInput[], outputDescriptions: WpsOutputDescription[]): WpsState;\r\n    unmarshalDismissResponse(jsonResponse: any, serverUrl: string, processId: string): WpsState;\r\n}\r\n"],"names":["XLink_1_0_Factory.XLink_1_0","OWS_1_1_0_Factory.OWS_1_1_0","SMIL_2_0_Factory.SMIL_2_0","SMIL_2_0_Language_Factory.SMIL_2_0_Language","GML_3_1_1_Factory.GML_3_1_1","WMTS_1_0_Factory.WMTS_1_0","Jsonix","HttpHeaders","map","Injectable","HttpClient","tslib_1.__values","WmsLayertype","WmtsLayertype","WfsLayertype","GeojsonLayertype","XyzLayertype","forkJoin","isRasterLayertype","isVectorLayertype","VectorLayer","of","CustomLayertype","WmtsLayer","WmsLayer","RasterLayer","tap","timer","mergeMap","retryWhen","delay","XLink_1_0","OWS_1_1_0","OWS_2_0_Factory.OWS_2_0","WPS_1_0_0_Factory.WPS_1_0_0","WPS_2_0_Factory.WPS_2_0","switchMap","share","Inject","NgModule"],"mappings":"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"}